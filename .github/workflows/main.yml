name: Build and Deploy to AWS Fargate Spot

on:
  push:
    branches:
      - main  # Deploys when code is pushed to the main branch
      - release
env:
  AWS_REGION: ap-northeast-1
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
      #   with:
      #     aws-region: ${{ env.AWS_REGION }}
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          

      # Build the Docker image
      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t ${{ secrets.AWS_ECR_REPOSITORY }}:$IMAGE_TAG .
          echo "::set-output name=image::$IMAGE_TAG"

      # Push the Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker tag ${{ secrets.AWS_ECR_REPOSITORY }}:$IMAGE_TAG ${{ secrets.AWS_ECR_URI }}:${{ github.sha }}
          docker push ${{ secrets.AWS_ECR_URI }}:${{ github.sha }}

      # Deploy to ECS Fargate Spot
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json # Path to your ECS task definition JSON file
          service: my-ecs-service            # Replace with your ECS service name
          cluster: my-ecs-cluster            # Replace with your ECS cluster name
          container-name: my-container       # Replace with your container name in the task definition
          image: ${{ secrets.AWS_ECR_URI }}:${{ github.sha }}
